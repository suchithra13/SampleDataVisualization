#pragma checksum "C:\Users\Admin\source\repos\SampleDataVisualization\Views\Health\Dashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "01c0662d85b0c9f61af4b649fb2ddec13ec8ec6c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Health_Dashboard), @"mvc.1.0.view", @"/Views/Health/Dashboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\source\repos\SampleDataVisualization\Views\_ViewImports.cshtml"
using SampleDataVisualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Admin\source\repos\SampleDataVisualization\Views\_ViewImports.cshtml"
using SampleDataVisualization.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"01c0662d85b0c9f61af4b649fb2ddec13ec8ec6c", @"/Views/Health/Dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9046b944037e52fc35f2fc2b981a751e4fbb4ba5", @"/Views/_ViewImports.cshtml")]
    public class Views_Health_Dashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Admin\source\repos\SampleDataVisualization\Views\Health\Dashboard.cshtml"
  
    ViewData["Title"] = "Health Check";
    Layout = "~/Views/Shared/_HealthLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01c0662d85b0c9f61af4b649fb2ddec13ec8ec6c3525", async() => {
                WriteLiteral("\r\n    <style>\r\n        #chart-container, #diabetic_chart-container {\r\n            width: 400px;\r\n            height: 400px;\r\n            border: 1px solid #ddd;\r\n            padding: 1px;\r\n            border-radius: 4px;\r\n        }\r\n    </style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01c0662d85b0c9f61af4b649fb2ddec13ec8ec6c4754", async() => {
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n            <h4>Health Dashboard<span id=\"LblLoadKeySpinner\"");
                BeginWriteAttribute("class", " class=\"", 494, "\"", 502, 0);
                EndWriteAttribute();
                WriteLiteral(@"></span></h4>
        </div>
        <hr />
        <hr />
        <hr />
        <hr />
        <hr />
        <hr />
        <hr />
        <div class=""col-md-2"">
            <button id=""download"">download PDF</button>
        </div>
    </div>
    <br />
    <div class=""row"" id=""canvas"">
        <div class=""col-md-5"" id=""chart-container"">
            <canvas id=""bar_chart""></canvas>
        </div>
        <hr />
        <div class=""col-md-5"" id=""diabetic_chart-container"">
            <canvas id=""diabetic_report_bar_chart""></canvas>
        </div>
    </div>
");
                DefineSection("Scripts", async() => {
                    WriteLiteral(@"
        <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js"" integrity=""sha256-qSIshlknROr4J8GMHRlW3fGKrPki733tLq+qeMCR05Q="" crossorigin=""anonymous""></script>
        <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"" integrity=""sha256-xKeoJ50pzbUGkpQxDYHD7o7hxe0LaOGeguUidbq6vis="" crossorigin=""anonymous""></script>
        <script src=""https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js""></script>
        <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.css"" integrity=""sha256-IvM9nJf/b5l2RoebiFno92E5ONttVyaEEsdemDC6iQA="" crossorigin=""anonymous"" />
        <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.js"" integrity=""sha256-arMsf+3JJK2LoTGqxfnuJPFTU4hAK57MtIPdFpiHXOU="" crossorigin=""anonymous""></script>
        <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css"" integrity=""sha256-aa0xaJgmK/X74WM224KMQeNQC2xYKwlAt08oZ");
                    WriteLiteral(@"qjeF0E="" crossorigin=""anonymous"" />
        <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"" integrity=""sha256-Uv9BNBucvCPipKQ2NS9wYpJmi8DTOEfTA/nH2aoJALw="" crossorigin=""anonymous""></script>
        <script src=""http://code.highcharts.com/highcharts.js""></script>
        <script src=""http://code.highcharts.com/modules/exporting.js""></script>
        <script src=""https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.2.61/jspdf.min.js""></script>

        <script>
        var ages = ");
#nullable restore
#line 56 "C:\Users\Admin\source\repos\SampleDataVisualization\Views\Health\Dashboard.cshtml"
              Write(Html.Encode(Json.Serialize(ViewBag.AGES)));

#line default
#line hidden
#nullable disable
                    WriteLiteral(";\r\n        var commonAge = ");
#nullable restore
#line 57 "C:\Users\Admin\source\repos\SampleDataVisualization\Views\Health\Dashboard.cshtml"
                   Write(Html.Encode(Json.Serialize(ViewBag.COMMONAGELIST)));

#line default
#line hidden
#nullable disable
                    WriteLiteral(@";

        var ctx = document.getElementById(""bar_chart"");
        var barchart = new Chart(ctx, {
            type: ""bar"",
            data: {
                labels: ages,
                datasets: [{
                    label: ""Count of people under same age"",
                    data: commonAge, backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
         ");
                    WriteLiteral(@"               'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    yAxes:
                        [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                }
     ");
                    WriteLiteral("       }\r\n        });\r\n\r\n        var percentage = ");
#nullable restore
#line 110 "C:\Users\Admin\source\repos\SampleDataVisualization\Views\Health\Dashboard.cshtml"
                    Write(Html.Encode(Json.Serialize(ViewBag.PERCENTAGE)));

#line default
#line hidden
#nullable disable
                    WriteLiteral(@";

        var ctx = document.getElementById(""diabetic_report_bar_chart"");
        var barchart = new Chart(ctx, {
            type: ""bar"",
            data: {
                labels: [""between 1-30"", ""between 31-60"", ""between 61-100""],
                datasets: [{
                    label: ""Percentage of diabetic people under age set"",
                    data: percentage,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    yAxes:
            ");
                    WriteLiteral(@"            [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                }
            }
        });

            document.getElementById('download').addEventListener(""click"", function (){
                // get size of report page
                var reportPageHeight = $('#canvas').innerHeight();
                var reportPageWidth = $('#canvas').innerWidth();

                // create a new canvas object that we will populate with all other canvas objects
                var pdfCanvas = $('<canvas />').attr({
                    id: ""canvaspdf"",
                    width: reportPageWidth,
                    height: reportPageHeight
                });

                // keep track canvas position
                var pdfctx = $(pdfCanvas)[0].getContext('2d');
                var pdfctxX = 0;
                var pdfctxY = 0;
                var buffer = 100;

                // f");
                    WriteLiteral(@"or each chart.js chart
                $(""canvas"").each(function (index) {
                    // get the chart height/width
                    var canvasHeight = $(this).innerHeight();
                    var canvasWidth = $(this).innerWidth();

                    // draw the chart into the new canvas
                    pdfctx.drawImage($(this)[0], pdfctxX, pdfctxY, canvasWidth, canvasHeight);
                    pdfctxX += canvasWidth + buffer;

                    // our report page is in a grid pattern so replicate that in the new canvas
                    if (index % 2 === 1) {
                        pdfctxX = 0;
                        pdfctxY += canvasHeight + buffer;
                    }
                });

                // create new pdf and add our new canvas as an image
                var pdf = new jsPDF('l', 'pt', [reportPageWidth, reportPageHeight]);
                pdf.addImage($(pdfCanvas)[0], 'PNG', 0, 0);

                // download the pdf
                pdf");
                    WriteLiteral(".save(\'ChartReport.pdf\');\r\n            });\r\n        </script>\r\n    ");
                }
                );
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
